//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChannelNineEventFeed.Data.Sqlite.Scripts {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Create {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Create() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ChannelNineEventFeed.Data.Sqlite.Scripts.Create", typeof(Create).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE IF NOT EXISTS `Category` (
        ///    `Id` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
        ///    `Created` DATETIME NULL,
        ///    `LastUpdated` DATETIME NULL,
        ///    `Name` NVARCHAR(256) NULL
        ///);.
        /// </summary>
        internal static string CategoryTable {
            get {
                return ResourceManager.GetString("CategoryTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE IF NOT EXISTS `Media` (
        ///    `Id` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
        ///    `Created` DATETIME NULL,
        ///    `LastUpdated` DATETIME NULL,
        ///    `SessionId` INTEGER NOT NULL,
        ///    `MediaType` NVARCHAR(8000) NULL,
        ///    `IsDownloaded` BIT NULL,
        ///    `IsDownloadInProgress` BIT NULL,
        ///    `IsPlayableInMediaElement` BIT NULL,
        ///    `DownloadLink` NVARCHAR(8000) NULL,
        ///    `PublishDate` DATETIME NULL
        ///);
        ///
        ///
        ///.
        /// </summary>
        internal static string MediaTable {
            get {
                return ResourceManager.GetString("MediaTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE IF NOT EXISTS `SessionCategory` (
        ///    `Id` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
        ///    `Created` DATETIME NULL,
        ///    `LastUpdated` DATETIME NULL,
        ///    `SessionId` INTEGER NOT NULL,
        ///    `CategoryId` INTEGER NOT NULL
        ///);
        ///
        ///
        ///.
        /// </summary>
        internal static string SessionCategoryTable {
            get {
                return ResourceManager.GetString("SessionCategoryTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE IF NOT EXISTS `Session` (
        ///    `Id` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
        ///    `Created` DATETIME NULL,
        ///    `LastUpdated` DATETIME NULL,
        ///    `EventYear` NVARCHAR(200) NOT NULL,
        ///    `EventName` NVARCHAR(8000) NULL,
        ///    `Starts` NVARCHAR(8000) NULL,
        ///    `Finish` NVARCHAR(8000) NULL,
        ///    `Title` NVARCHAR(8000) NULL,
        ///    `Description` NVARCHAR(8000) NULL,
        ///    `Speakerids` NVARCHAR(max) NULL,
        ///    `Link` NVARCHAR(8000) NULL,
        ///    `Slides` NVARCHAR(8000) NULL,
        ///    `Tags` NVARCHAR(max) NULL,
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SessionTable {
            get {
                return ResourceManager.GetString("SessionTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE IF NOT EXISTS `Speaker` (
        ///    `Id` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
        ///    `Created` DATETIME NULL,
        ///    `LastUpdated` DATETIME NULL,
        ///    `Name` NVARCHAR(8000) NULL,
        ///    `Summary` NVARCHAR(8000) NULL,
        ///    `HostedPageLink` NVARCHAR(8000) NULL,
        ///    `EventYear` NVARCHAR(200) NOT NULL,
        ///    `EventName` NVARCHAR(8000) NULL,
        ///    `PublishDate` DATETIME NULL
        ///);
        ///
        ///.
        /// </summary>
        internal static string SpeakerTable {
            get {
                return ResourceManager.GetString("SpeakerTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE IF NOT EXISTS `SpeakerVideo` (
        ///    `Id` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
        ///    `Created` DATETIME NULL,
        ///    `LastUpdated` DATETIME NULL,
        ///    `SpeakerId` INTEGER NOT NULL,
        ///    `VideoId` INTEGER NOT NULL
        ///);
        ///
        ///.
        /// </summary>
        internal static string SpeakerVideoTable {
            get {
                return ResourceManager.GetString("SpeakerVideoTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE IF NOT EXISTS `Video` (
        ///    `Id` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
        ///    `Created` DATETIME NULL,
        ///    `LastUpdated` DATETIME NULL,
        ///	`Title` NVARCHAR(8000) NULL,
        ///	`SummaryHtml` NVARCHAR(8000) NULL,
        ///	`Summary` NVARCHAR(8000) NULL,
        ///	`EventYear` NVARCHAR(200) NOT NULL,
        ///	`EventName` NVARCHAR(8000) NULL,
        ///	`DurationSeconds` INTEGER NOT NULL,
        ///	`PublishDate` DATETIME NULL,
        ///	`HostedPageLink` NVARCHAR(8000) NULL,
        ///	`IsVideoViewingComplete` BIT NULL,
        ///	`MyRatingScore` FLOAT NULL,
        ///	`SessionCod [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string VideoTable {
            get {
                return ResourceManager.GetString("VideoTable", resourceCulture);
            }
        }
    }
}
